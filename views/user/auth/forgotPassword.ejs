<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Forgot Password</title>
    <%- include("../../partials/head") %>
    <link rel="stylesheet" href="/styles/authForm.css" />
  </head>
  <body>
    <%- include("../../partials/userHeader") %>

    <div class="form-wrapper page-wrapper">
      <div class="form-container">
        <h1 class="text-center">Forgot Password</h1>
        <form id="passResetForm">
          <div class="form-group mt-4">
            <label for="email">Enter your email</label>
            <input type="text" class="form-control" id="email" name="email" />
            <small class="text-danger" id="emailError"></small>
            <small class="text-success" id="successMsg"></small>
            <% if(errorMessage) { %>
            <small class="text-danger" id="errorMessage"
              ><%= errorMessage %></small
            >
            <% } %>
          </div>

          <button
            type="submit"
            class="btn btn-primary mt-5 fs-6 w-100 login-btn"
            id="resetBtn"
          >
            Send Password Reset Link
            <img
              src="/images/icons/loader-gif.gif"
              alt=""
              id="loader"
              class="loader"
            />
          </button>

          <div class="link-text mt-4">
            <a href="/login">Return to Login</a>
          </div>
        </form>
      </div>
    </div>

    <%- include("../../partials/userFooter") %>
    <script>
      const passResetForm = document.getElementById("passResetForm");
      const emailError = document.getElementById("emailError");
      const successMsg = document.getElementById("successMsg");
      const resetBtn = document.getElementById("resetBtn");

      const startCheckingResetStatus = () => {
        const checkPasswordReset = setInterval(async () => {
          try {
            const res = await fetch("/reset-password/reset/status");
            const data = await res.json();

            if (data.resetCompleted) {
              clearInterval(checkPasswordReset);
              window.location.href = "/reset-password/reset/success";
            }
          } catch (error) {
            console.error("Error checking reset status", error);
          }
        }, 2000);
      };


      passResetForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const errorMessage = document.getElementById("errorMessage");

        errorMessage.innerText = "";
        emailError.innerText = "";
        successMsg.innerText = "";
        let isValid = true;

        const email = document.getElementById("email").value.trim();
        if (!email) {
          isValid = false;
          emailError.innerText = "Enter your email address";
        } else if (!/\S+@\S+\.\S+/.test(email)) {
          isValid = false;
          emailError.innerText = "Enter a valid email address";
        }

        if (isValid) {
          resetBtn.classList.add("loading");
          resetBtn.disabled = true;
          try {
            const response = await fetch("/forgot-password", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ email: email }),
            });

            if (response.ok) {
              const data = await response.json();
              startCheckingResetStatus()
              successMsg.innerText = data.message;
            } else {
              const errorData = await response.json();
              emailError.innerText = errorData.error || "Something went wrong";
            }
          } catch (error) {
            console.error("Error:", error);
            emailError.innerText = "An error occurred. Please try again later.";
          } finally {
            resetBtn.classList.remove("loading");
            resetBtn.disabled = false;
          }
        }
      });


    </script>
  </body>
</html>
